%{
#include <string>
#include "nodes.hpp"
#include "minik_parser.hpp"
#define SAVE_TOKEN yylval.str = new std::string(yytext, yyleng)
#define TOKEN(t) (yylval.token = t)
extern "C" int yywrap() { }
%}

%%

[ \t\n]                 /* omit whitespace */;
"function"              return TOKEN(TFUNCTION);
"return"                return TOKEN(TRETURN);
"if"                    return TOKEN(TIF);
"while"                 return TOKEN(TWHILE);
"var"                   return TOKEN(TVAR);
[a-zA-Z_][a-zA-Z0-9_]*  SAVE_TOKEN; return TIDENTIFIER;
[0-9]+                  SAVE_TOKEN; return TINTEGER;
":="                    return TOKEN(TEQUAL);
"=="                    return TOKEN(TCEQ);
"!="                    return TOKEN(TCNE);
"<"                     return TOKEN(TCLT);
"<="                    return TOKEN(TCLE);
">"                     return TOKEN(TCGT);
">="                    return TOKEN(TCGE);
"("                     return TOKEN(TLPAREN);
")"                     return TOKEN(TRPAREN);
"{"                     return TOKEN(TLBRACE);
"}"                     return TOKEN(TRBRACE);
","                     return TOKEN(TCOMMA);
"+"                     return TOKEN(TPLUS);
"-"                     return TOKEN(TMINUS);
"*"                     return TOKEN(TMUL);
"/"                     return TOKEN(TDIV);
.                       fprintf(stderr, "Unknown token!\n"); yyterminate();

%%
